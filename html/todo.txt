level/room control management design:
	1. levels are things that have their own glitch codexes
	  
0. grabby hand + tile placement not working at zoom levels other than 2??
	-also grabby hand should freeze camera position until dropped?? (don't move while moving player)
1. entity bug when moving entity offscreen and mouse leaves canvas
2. make glitch crysal emitters
2. make scriptable entities???
3. Edit entity context menu option
1. Create entity context menu option
	-select which entity to create??
2. make player sprite look better against light gradients (get rid of black outline


-----------------------------------------------------------------eventual------------------------
1. node webkit map f12 to opening up console

2. Start designing/implementing levels/mechanics/glitches
	
3. Add key remapper for JUMP/LEFt/RIGHT/DOWN keys
	-input manager should treat keys and mouse keys as the same (for ease of remapping input)
	
4. Can fix tile faces thingy by having a sorter or something in the render function of room. (painter's algorith,?) (so player isn't rendered in front of tiles she is behind)

0. make loading screen that uses css gradient

5. advanced spellbook: pops up a console window of a fixed size with a limited scope (change namespace of the console to the room that you are in (e.g. game.level.room.entities -> entities)
	-further more (entities -> npc_alice, npc_chloe, swarm, grimoire)
	-player -> olivia (or player's name)
	
	example player spell:
		olivia.gravity = -1
		tree.update = function(){
			x++;	//todo how to make this work and not use the global namespace x, will have to parse
		}			//functions and ensure that the scope is using this.x instead!!??
	
6. could you save space by saving/loading the tiles by aggregate tile and reassembling original from the aggregation upon import?
