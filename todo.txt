level/room control management design:
	1. levels are things that have grids of rooms and have their own glitch codexes
		1. rooms are things that have dimensions, tiles, and entities
	2. levels can be composed of many rooms or only a single room
	3. rooms can be any size that is divisible by Game.TILE_SIZE
	4. regardlesss of room size, rooms fit into a single grid location in the level manager,
		-this may result in wonky transitions (i.e. falling from a horizontal room into a vertical room) (oh well)
	  
  	
0. saving level doesn't report success???
1. entity bug when moving entity offscreen and mouse leaves canvas
2. make scriptable entities???
3. Edit entity context menu option
1. Create entity context menu option
	-select which entity to create??
	
5. level minimap: ability to drag rooms and rearrange them by grid????? (????)


-----------------------------------------------------------------eventual------------------------
1. node webkit map f12 to opening up console

2. Start designing/implementing levels/mechanics/glitches
	
3. Add key remapper for JUMP/LEFt/RIGHT/DOWN keys
	-input manager should treat keys and mouse keys as the same (for ease of remapping input)
	
4. Can fix tile faces thingy by having a sorter or something in the render function of room. (painter's algorith,?) (so player isn't rendered in front of tiles she is behind)

0. make loading screen that uses css gradient

5. advanced spellbook: pops up a console window of a fixed size with a limited scope (change namespace of the console to the room that you are in (e.g. game.level.room.entities -> entities)
	-further more (entities -> npc_alice, npc_chloe, swarm, grimoire)
	-player -> olivia (or player's name)
	
	example player spell:
		olivia.gravity = -1
		tree.update = function(){
			x++;	//todo how to make this work and not use the global namespace x, will have to parse
		}			//functions and ensure that the scope is using this.x instead!!??
	
6. could you save space by saving/loading the tiles by aggregate tile and reassembling original from the aggregation upon import?
